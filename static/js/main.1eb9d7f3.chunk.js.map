{"version":3,"sources":["components/StrainProcess/grid_layout.js","components/StrainProcess/StrainProcess.js","components/StrainProcess/StrainProcessContainer.js","components/App/App.js","index.js"],"names":["gridLayout","width","height","key","numCols","gridMap","placement","arrange","data","grid","uniqKeys","d3","d","rollup","values","length","entries","sort","a","b","value","numRows","Math","ceil","xScale","range","padding","domain","scaleHeight","yScale","forEach","i","col","row","floor","index","id","count","x","y","k","setupGrid","gridPos","gridx","gridy","this","Object","_","arguments","cols","FAST_MODE","END_MODE","STRAIN_TYPES","1","name","color","2","3","4","COUNTS","Phase1","Phase2","Phase3","Start","Combination","Hit","Improvement2","Improvement1","addHit","phenotype","round","random","generateRandomNumber","min","max","console","time","ENDED","setupDatum","hts","tank","built","promoted","designed","hit","type","datum","getType","refreshDatum","gridScale","oldElapsed","elapsed","addTrans","transEnd","newDatum","strain","static","delayFunc","delayFuncNoRand","timeScale","clamp","shortTimeScale","longTimeScale","combiTrans","strains","allCombi","plotHeight","t","combiTop","maxShown","xPos","trans","delay","duration","ease","transIndex","combicount","timeRatio","tlong","tshort","design","r","push","setupTrans","bandwidth","circleY","circleX","circleR","dataLength","radius","cx","cy","totalLength","frac","radians","PI","cos","sin","circlePos","StrainProcess","Component","componentDidMount","setup","update","componentDidUpdate","props","cSide","side","cBottom","bottom","ended","sideG","append","bottomG","yAxis","classed","yAxisLabel","attr","xAxis","build","types","tanks","combis","rawTime","endModeTicks","moveCircles","attributes","that","removeData","dataIndex","transT","delayAmount","sticky","endingKeep","pos","log","combi","assign","tankKeys","keys","list","c","filter","indexOf","updateCanvas","endAnimation","timeEnd","lastCombiIndex","j","combiX","combiY","combiColor","endNode","endingTrans","left","top","timer","bind","updateAxes","sizeScale","ctx","canvas","getContext","setTransform","scale","clearRect","translate","cellWidth","cellHeight","w","h","style","line","xe","ye","xm","ym","save","beginPath","moveTo","quadraticCurveTo","strokeStyle","lineWidth","stroke","restore","drawEllipseWithQuatraticCurve","pi2","fillStyle","arc","fill","combisSlice","slice","combisLength","labels","metrics","strainTypes","legendEnter","selectAll","enter","text","toFixed","countKeys","includes","render","canvasStyle","className","onClick","handleClick","ref","node","defaultProps","addComputedProps","createData","right","window","devicePixelRatio","plotWidth","paddingInner","StrainProcessContainer","constructor","super","state","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1eb9d7f3.chunk.js","sourcesContent":["/**\n * @copyright 2018 Zymergen\n */\nimport * as d3 from 'd3';\n\n/**\n * Grid layout\n * Given an array of data and a key to group the data by\n * this produces a set of points to cluster the groups around.\n * Written in the style of a d3-plugin.\n */\nfunction gridLayout() {\n  let width = 100;\n  let height = 100;\n  let key = 'x';\n  let numCols = 20;\n  let gridMap = {};\n\n  const placement = {};\n\n  /**\n   * called internally to setup grid points.\n   */\n  function setupGrid(data) {\n    const uniqKeys = d3\n      .nest()\n      .key(d => d[key])\n      .rollup(values => values.length)\n      .entries(data)\n      .sort((a, b) => b.value - a.value);\n\n    // reset gridMap\n    gridMap = {};\n\n    // Tweak layout if not enough values for\n    // good looking columns\n    // TODO: just based on visual apparance - not data\n    if (uniqKeys.length < numCols * 2) {\n      numCols /= 2;\n    }\n\n    const numRows = Math.ceil(uniqKeys.length / numCols);\n\n    const xScale = d3\n      .scalePoint()\n      .range([0, width])\n      .padding(0.05)\n      .domain(d3.range(0, numCols, 1));\n\n    // Tweak layout if not enough values for\n    // good looking rows\n    // TODO: just based on visual apparance - not data\n    let scaleHeight = height;\n    // if (numRows < 3) {\n    //   scaleHeight = height / 2;\n    // } else if (numRows > 8) {\n    //   scaleHeight = height * 2.5;\n    // }\n\n    const yScale = d3\n      .scalePoint()\n      .range([0, scaleHeight])\n      .padding(0.05)\n      .domain(d3.range(0, numRows, 1));\n\n    uniqKeys.forEach((d, i) => {\n      const col = i % numCols;\n      const row = Math.floor(i / numCols);\n      gridMap[d.key] = {\n        index: i,\n        id: d.key,\n        count: d.value,\n        x: xScale(col),\n        y: yScale(row),\n        col,\n        row,\n      };\n    });\n\n    // function that pulls out coordinates from gridMap\n    const grid = k => {\n      return gridMap[k];\n    };\n    return grid;\n  }\n\n  /**\n   * Given an array of data, augment the elements of that data with\n   * `gridx` and `gridy` values. This indicates the centroid to move towards\n   * for that individual data point.\n   *\n   * @param {Array} data Data array to modify\n   */\n  placement.arrange = function arrange(data) {\n    const grid = setupGrid(data);\n    data.forEach(d => {\n      const gridPos = grid(d[key]);\n      d.gridx = gridPos.x;\n      d.gridy = gridPos.y;\n    });\n\n    return this;\n  };\n\n  /**\n   * Getter for current grid\n   * @returns {Array} array of grid points\n   */\n  placement.grid = function getGrid() {\n    return Object.values(gridMap);\n  };\n\n  /**\n   * Getter / Setter for key value to access data by\n   * @param {String} _ New Key. If missing, returns current key.\n   */\n  placement.key = function setKey(_) {\n    if (!arguments.length) {\n      return key;\n    }\n    key = _;\n\n    return placement;\n  };\n\n  /**\n   * Getter / Setter for width to use\n   * @param {String} _ New width. If missing, returns current width.\n   */\n  placement.width = function setWidth(_) {\n    if (!arguments.length) {\n      return width;\n    }\n    width = _;\n\n    return placement;\n  };\n\n  /**\n   * Getter / Setter for height to use\n   * @param {String} _ New height. If missing, returns current height.\n   */\n  placement.height = function setHeight(_) {\n    if (!arguments.length) {\n      return height;\n    }\n    height = _;\n\n    return placement;\n  };\n\n  /**\n   * Getter / Setter for number of columns\n   * @param {String} _ New number of coluns. If missing, returns current numCols.\n   */\n  placement.cols = function setCols(_) {\n    if (!arguments.length) {\n      return numCols;\n    }\n    numCols = _;\n\n    return placement;\n  };\n\n  // Return placement function\n  return placement;\n}\n\nexport default gridLayout;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport addComputedProps from 'react-computed-props';\n\nimport gridLayout from './grid_layout';\n\nimport './StrainProcess.scss';\n\nconst getRandom = function(list) {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\nfunction drawEllipseWithQuatraticCurve(ctx, x, y, w, h, style, line) {\n  const xe = x + w; // x-end\n  const ye = y + h; // y-end\n  const xm = x + w / 2; // x-middle\n  const ym = y + h / 2; // y-middle\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.moveTo(x, ym);\n  ctx.quadraticCurveTo(x, y, xm, y);\n  ctx.quadraticCurveTo(xe, y, xe, ym);\n  ctx.quadraticCurveTo(xe, ye, xm, ye);\n  ctx.quadraticCurveTo(x, ye, x, ym);\n  if (style) ctx.strokeStyle = style;\n  if (line) ctx.lineWidth = line;\n  ctx.stroke();\n  ctx.restore();\n}\n\nconst FINAL_HTS = 30200;\n// const FINAL_HTS = 1400;\nconst FAST_DESIGN = 7000;\nlet FAST_MODE = false;\nlet END_MODE = false;\nlet FAST_SPEED = 0.6;\n\nconst MAX_COMBI = 23;\n\nconst STRAIN_TYPES = {\n  1: { id: 1, name: 'Type 1', color: '#E8871A' },\n  2: { id: 2, name: 'Type 2', color: '#DA3390' },\n  3: { id: 3, name: 'Type 3', color: '#5144D3' },\n  4: { id: 4, name: 'Type 4', color: '#00C0C7' },\n};\n\nconst COUNTS = {\n  Phase1: 0,\n  Phase2: 0,\n  Phase3: 0,\n  Start: 0,\n  Combination: 0,\n  Hit: 0,\n  Improvement2: 0.0,\n  Improvement1: 0.0,\n};\n\nfunction addHit(d) {\n  const phenotype = d.index % 2 === 0 ? 'Improvement2' : 'Improvement1';\n\n  if (END_MODE) {\n    if (COUNTS['Improvement1'] !== 27.0) {\n      COUNTS['Improvement1'] = 27.0;\n    }\n  } else {\n    COUNTS[phenotype] += Math.round(Math.random() * 10) / 10;\n    // COUNTS[phenotype] = COUNTS[phenotype].toFixed(2);\n    COUNTS['Hit'] += 1;\n  }\n}\n\nfunction circlePos(index, radius, cx, cy, totalLength) {\n  index = index - 200;\n\n  const frac = 360 / totalLength;\n\n  const radians = index * (Math.PI / 180);\n  // const radPush = index % 2 === 0 ? -5 : 5;\n  return {\n    x: cx + radius * Math.cos(radians * frac),\n    y: cy + radius * Math.sin(radians * frac),\n  };\n}\n\nfunction generateRandomNumber(min, max) {\n  const highlightedNumber = Math.random() * (max - min) + min;\n\n  return highlightedNumber;\n}\n\nfunction isPromoted(datum) {\n  return datum.hts > 19.7;\n}\n\nfunction isHit(datum) {\n  return Math.random() > 0.8;\n}\n\nfunction getType(datum) {\n  let type = 1;\n  if (Math.random() > 0.5) {\n    type = 1;\n  } else {\n    const typeR = Math.round(generateRandomNumber(2, 4));\n    type = typeR;\n  }\n  return type;\n}\nconsole.time('animation');\n\nlet ENDED = false;\nfunction endAnimation() {\n  if (!ENDED) {\n    ENDED = true;\n    END_MODE = true;\n  }\n}\n\nfunction setupDatum(d) {\n  d.hts = generateRandomNumber(0.0, 20.0);\n  d.tank = generateRandomNumber(10.0, 20.0);\n  d.built = Math.random() > 0.3;\n  d.promoted = isPromoted(d);\n  d.designed = Math.random() > 0.3;\n  d.built = Math.random() > 0.3;\n  d.hit = isHit(d);\n\n  if (END_MODE) {\n    d.built = false;\n    d.promoted = false;\n    d.designed = false;\n    d.hit = false;\n    d.tank = 0;\n    d.hts = 0;\n  }\n\n  d.type = getType(d);\n  return d;\n}\n\nfunction refreshDatum(d, gridScale) {\n  const oldElapsed = d.elapsed;\n  setupDatum(d);\n  if (COUNTS['Phase2'] < FINAL_HTS) {\n    addTrans(d, gridScale);\n  } else {\n    endAnimation();\n    d.transEnd = true;\n  }\n  d.elapsed = oldElapsed;\n}\n\nfunction newDatum(index) {\n  const strain = {\n    index: index,\n    elapsed: 0,\n  };\n  setupDatum(strain);\n\n  strain.static = {};\n  return strain;\n}\n\nfunction createData(count) {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    data.push(newDatum(i));\n  }\n  return data;\n}\n\nconst delayFunc = function(d) {\n  // const pause = FAST_MODE ? 1 : 10;\n  const pause = 10;\n  return d.index * pause * Math.random();\n};\n\nconst delayFuncNoRand = function(d) {\n  // const pause = FAST_MODE ? 1 : 10;\n  const pause = 10;\n  return d.index * pause;\n};\nconst DURATION = 1800;\nconst SHORT_DURATION = 200;\nconst LONG_DURATION = 4000;\nconst timeScale = d3\n  .scaleLinear()\n  .domain([0, DURATION])\n  .range([0, 1])\n  .clamp(true);\nconst shortTimeScale = d3\n  .scaleLinear()\n  .domain([0, SHORT_DURATION])\n  .range([0, 1])\n  .clamp(true);\nconst longTimeScale = d3\n  .scaleLinear()\n  .domain([0, LONG_DURATION])\n  .range([0, 1])\n  .clamp(true);\n\nfunction endingTrans(combis, gridScale, plotHeight, rawTime) {\n  const rowHeight = MAX_COMBI * 8;\n  const rowPadding = 40;\n  const t = timeScale;\n  const combiTop = plotHeight - (rowHeight * 2 + rowPadding);\n  const lastCombiIndex = combis.length - 1;\n  const xPos = gridScale(4) + gridScale.bandwidth() / 2;\n  combis.forEach((combi, i) => {\n    // const oldElapsed = combi[0].elapsed;\n    combi.forEach((d, j) => {\n      d.combiX = d.x;\n      d.combiY = d.y;\n      d.combiColor = d.color;\n      const color = i === lastCombiIndex ? STRAIN_TYPES[d.type].color : 'rgba(255,255,255,0)';\n      d.trans = [\n        {\n          color: d3.interpolate(STRAIN_TYPES[d.type].color, color),\n          delay: 1400,\n          duration: t.domain()[1],\n          timeScale: t,\n          ease: d3.easeCubicInOut,\n        },\n        {\n          id: 'ending',\n          x: d3.interpolate(d.combiX, xPos),\n          y: d3.interpolate(d.combiY, combiTop + j * 8),\n          delay: 100,\n          duration: t.domain()[1],\n          timeScale: t,\n          ease: d3.easeCubicInOut,\n        },\n      ];\n      d.endingKeep = i === lastCombiIndex;\n      d.transIndex = 0;\n      d.transEnd = false;\n      d.endNode = true;\n      d.elapsed = rawTime;\n      d.timeRatio = 1.0;\n    });\n  });\n}\n\nfunction combiTrans(strains, allCombi, gridScale, plotHeight) {\n  // const t = FAST_MODE ? shortTimeScale : timeScale;\n  const t = timeScale;\n  const maxShown = 20;\n  const rowHeight = MAX_COMBI * 8;\n  const rowPadding = 40;\n  const combiTop = plotHeight - (rowHeight * 2 + rowPadding);\n\n  const index = (allCombi.length % maxShown) + 1;\n  const row = index > maxShown / 2 ? 1 : 0;\n  // const row = allCombi.length % 2;\n  const xPos = (allCombi.length % 10) * 15;\n  // const yPos = allCombi.length % 52;\n  strains.forEach((d, i) => {\n    d.trans = [\n      {\n        id: i === 0 ? 'combicon' : 'combicon-extra',\n        x: d3.interpolate(d.gridx + gridScale(3), gridScale(4) + xPos),\n        y: d3.interpolate(d.gridy, combiTop + i * 8 + row * (rowHeight + rowPadding)),\n        delay: 500,\n        duration: t.domain()[1],\n        timeScale: t,\n        ease: d3.easeCubicInOut,\n      },\n    ];\n    d.transIndex = 0;\n    d.transEnd = false;\n    d.combicount = strains.length;\n    d.timeRatio = FAST_MODE ? FAST_SPEED : 1.0;\n  });\n}\n\nfunction addTrans(d, gridScale) {\n  // const t = FAST_MODE ? shortTimeScale : timeScale;\n  const t = timeScale;\n  const tlong = longTimeScale;\n  const tshort = shortTimeScale;\n\n  d.trans = [\n    {\n      id: 'design',\n      color: () => STRAIN_TYPES[d.type].color,\n      y: () => d.design.y,\n      x: () => d.design.x,\n      r: d3.interpolate(0, 4),\n      delay: d.index,\n      duration: tshort.domain()[1],\n      timeScale: tshort,\n      ease: d3.easeCubicInOut,\n    },\n    {\n      id: 'wait',\n      delay: delayFuncNoRand(d),\n      duration: t.domain()[1],\n      timeScale: t,\n      ease: d3.easeCubicInOut,\n    },\n    {\n      id: 'build',\n      y: d3.interpolate(d.design.y, d.gridy),\n      x: d3.interpolate(d.design.x, d.gridx + gridScale(1)),\n      delay: delayFunc(d),\n      timeScale: tlong,\n      duration: tlong.domain()[1],\n      ease: d3.easeCubicInOut,\n    },\n  ];\n\n  if (d.built) {\n    d.trans.push({\n      id: 'hts',\n      x: d3.interpolate(d.gridx + gridScale(1), d.gridx + gridScale(2)),\n      delay: delayFunc(d),\n      timeScale: t,\n      duration: t.domain()[1],\n      ease: d3.easeCubicInOut,\n    });\n  } else {\n    d.trans.push({\n      color: d3.interpolate(STRAIN_TYPES[d.type].color, 'rgba(255,255,255,0)'),\n      delay: delayFunc(d),\n      timeScale: tshort,\n      duration: tshort.domain()[1],\n      ease: d3.easeCubicInOut,\n    });\n  }\n\n  if (d.built && d.promoted) {\n    d.trans.push({\n      id: 'tank',\n      x: d3.interpolate(d.gridx + gridScale(2), d.gridx + gridScale(3)),\n      delay: delayFunc(d),\n      timeScale: t,\n      duration: t.domain()[1],\n      ease: d3.easeCubicInOut,\n    });\n  } else if (d.built) {\n    d.trans.push({\n      color: d3.interpolate(STRAIN_TYPES[d.type].color, 'rgba(255,255,255,0)'),\n      delay: delayFunc(d),\n      timeScale: tshort,\n      duration: tshort.domain()[1],\n      ease: d3.easeCubicInOut,\n    });\n  }\n\n  d.timeRatio = FAST_MODE ? FAST_SPEED : 1.0;\n  d.transIndex = 0;\n  d.elapsed = 0;\n  d.transEnd = false;\n}\n\nfunction setupTrans(data, gridScale, plotHeight) {\n  const grid = gridLayout()\n    .width(gridScale.bandwidth())\n    .height(plotHeight)\n    .key('index');\n\n  grid.arrange(data);\n\n  const circleY = plotHeight / 2;\n  const circleX = gridScale.bandwidth() / 2;\n\n  const circleR = gridScale.bandwidth() / 2 - 20;\n\n  const dataLength = data.length;\n\n  data.forEach(function(d) {\n    d.design = circlePos(d.index, circleR, circleX, circleY, dataLength);\n    addTrans(d, gridScale);\n  });\n  return data;\n}\n\nfunction chartProps(props) {\n  const { height, width } = props;\n\n  const data = createData(1000);\n\n  const padding = {\n    top: 55,\n    right: 10,\n    bottom: 15,\n    left: 40,\n  };\n\n  // scaling for retina displays\n  let sizeScale = 1.0;\n  if (window.devicePixelRatio) {\n    sizeScale = window.devicePixelRatio;\n  }\n\n  const plotWidth = width - padding.left - padding.right;\n  const plotHeight = height - padding.top - padding.bottom;\n\n  const gridCount = 5;\n\n  const gridScale = d3\n    .scaleBand()\n    .domain(d3.range(0, gridCount))\n    .range([0, plotWidth])\n    .paddingInner(0.2);\n\n  setupTrans(data, gridScale, plotHeight);\n\n  return {\n    data,\n    padding,\n    plotWidth,\n    plotHeight,\n    sizeScale,\n    gridScale,\n  };\n}\n\nclass StrainProcess extends Component {\n  static defaultProps = {\n    data: [],\n    width: 1000,\n    height: 1000 * (3 / 4),\n  };\n\n  /**\n   * Update canvas when component mounts\n   */\n  componentDidMount() {\n    this.setup();\n    this.update();\n  }\n\n  /**\n   * Update Canvas when component updates\n   */\n  componentDidUpdate() {\n    this.update();\n  }\n\n  setup() {\n    const { data } = this.props;\n    this.data = data;\n    const cSide = d3.select(this.side);\n    const cBottom = d3.select(this.bottom);\n    this.ended = false;\n    this.sideG = cSide.append('g');\n    this.bottomG = cBottom.append('g');\n    this.yAxis = this.sideG.append('g').classed('y-axis', true);\n\n    this.yAxisLabel = this.sideG\n      .append('text')\n      .attr('class', 'axis-label')\n      .attr('text-anchor', 'middle');\n    this.xAxis = this.bottomG.append('g').classed('x-axis', true);\n    this.static = {\n      build: [],\n      hts: [],\n      tank: [],\n      types: {\n        1: [],\n        2: [],\n        3: [],\n        4: [],\n      },\n    };\n\n    this.tanks = {};\n    this.combis = [];\n\n    this.rawTime = 0;\n    this.endModeTicks = 0;\n  }\n\n  moveCircles(t) {\n    const { gridScale, plotHeight } = this.props;\n    const attributes = ['x', 'y', 'color', 'r'];\n\n    this.rawTime = t;\n    if (END_MODE) {\n      this.endModeTicks += 1;\n    }\n    // let timeRatio = FAST_MODE ? 0.5 : 2.0;\n    // if (END_MODE) {\n    //   timeRatio = 1.0;\n    // }\n    // console.log('timeRatio', timeRatio);\n    const that = this;\n    const dataLength = this.data.length;\n    const removeData = [];\n    // this.data.forEach(function (d) {\n    for (let dataIndex = 0; dataIndex < dataLength; dataIndex++) {\n      const d = this.data[dataIndex];\n      if (!d.timeRatio) {\n        d.timeRatio = FAST_MODE ? FAST_SPEED : 1.0;\n      }\n      if (!d.transEnd) {\n        const transT = t - d.elapsed * d.timeRatio;\n        const transIndex = d.transIndex;\n        const trans = d.trans[transIndex];\n        const timeScale = trans.timeScale;\n        const delayAmount = trans.delay * d.timeRatio;\n        const time = trans.ease(timeScale(transT - delayAmount));\n\n        attributes.forEach(attr => {\n          if (trans[attr]) {\n            d[attr] = trans[attr](time);\n          }\n        });\n\n        if (time >= 1.0) {\n          let sticky = Math.random() > 0.6;\n          if (trans.id === 'ending' && d.endingKeep) {\n            const pos = { x: d.x, y: d.y };\n            that.static.types[d.type].push(pos);\n          }\n\n          if (trans.id === 'design') {\n            COUNTS['Start'] += 1;\n            if (!FAST_MODE && COUNTS['Start'] >= FAST_DESIGN) {\n              FAST_MODE = true;\n            }\n          } else if (trans.id === 'build') {\n            COUNTS['Phase1'] += 1;\n            if (!d.static.build && sticky) {\n              const pos = { x: d.x, y: d.y };\n              that.static.build.push(pos);\n              that.static.types[d.type].push(pos);\n              d.static.build = true;\n            }\n          } else if (trans.id === 'hts') {\n            COUNTS['Phase2'] += 1;\n            // turn on fast mode\n\n            if (!d.static.hts && sticky) {\n              const pos = { x: d.x, y: d.y };\n              that.static.hts.push(pos);\n              that.static.types[d.type].push(pos);\n              d.static.hts = true;\n            }\n          } else if (trans.id === 'tank') {\n            COUNTS['Phase3'] += 1;\n            if (d.hit) {\n              console.log('hit');\n              addHit(d);\n            }\n            const pos = { x: d.x, y: d.y };\n            that.static.tank.push(pos);\n            that.static.types[d.type].push(pos);\n            if (END_MODE) {\n              d.combi = true;\n            }\n          } else if (trans.id === 'combicon') {\n            COUNTS['Combination'] += d.combicount * 10;\n            // const pos = { x: d.x, y: d.y };\n            // that.static.types[d.type].push(pos);\n          }\n\n          // !!!\n          // d.elapsed += trans.duration + delayAmount;\n          d.elapsed = t;\n          d.transIndex += 1;\n          if (d.endingKeep) {\n            d.timeRatio = 1.0;\n          } else {\n            d.timeRatio = FAST_MODE ? FAST_SPEED : 1.0;\n          }\n\n          if (d.transIndex >= d.trans.length) {\n            if (d.built && d.promoted && !d.combi) {\n              d.transEnd = true;\n\n              const combi = [Object.assign({}, d)];\n\n              const tankKeys = Object.keys(that.tanks);\n              if (tankKeys.length > 9) {\n                const count = Math.min(Math.round(tankKeys.length / 10) + 1, MAX_COMBI);\n                for (let i = 0; i < count; i++) {\n                  const index = getRandom(tankKeys);\n                  combi.push(Object.assign({}, that.tanks[index]));\n                }\n              }\n\n              if (combi.length > 1 && !END_MODE) {\n                combiTrans(combi, that.combis, gridScale, plotHeight);\n                combi.forEach(c => {\n                  c.combi = true;\n                  c.elapsed = t;\n\n                  that.data.push(c);\n                });\n\n                that.combis.push(combi);\n              }\n              that.tanks[d.index] = d;\n            } else if (d.combi) {\n              d.transEnd = true;\n              // remove combi\n              if (!d.endingKeep) {\n                removeData.push(dataIndex);\n              }\n            } else {\n              refreshDatum(d, gridScale);\n            }\n          }\n        }\n      }\n    }\n\n    this.data = this.data.filter(function(value, index) {\n      return removeData.indexOf(index) === -1;\n    });\n    // });\n\n    this.updateCanvas();\n  }\n\n  endAnimation() {\n    const { gridScale, plotHeight } = this.props;\n    if (!this.ended) {\n      this.ended = true;\n      console.timeEnd('animation');\n      endingTrans(this.combis, gridScale, plotHeight, this.rawTime);\n      console.log(this.combis);\n      const that = this;\n      this.combis.forEach(combi => {\n        combi.forEach(d => {\n          that.data.push(Object.assign({}, d));\n        });\n      });\n      console.log('data');\n      console.log(this.data);\n    }\n  }\n  /**\n   *\n   */\n  update() {\n    const { padding } = this.props;\n\n    this.sideG.attr('transform', `translate(${padding.left} ${padding.top})`);\n    this.bottomG.attr('transform', `translate(${padding.left} 0)`);\n\n    this.timer = d3.timer(this.moveCircles.bind(this));\n    this.updateAxes();\n  }\n\n  updateCanvas() {\n    const { sizeScale, gridScale, plotHeight, width, height, padding } = this.props;\n    // console.log('data', this.data);\n\n    // get context\n    const ctx = this.canvas.getContext('2d');\n\n    // Reset transform to ensure scale setting is appropriate.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(sizeScale, sizeScale);\n\n    // draw main bars\n    ctx.clearRect(0, 0, width, height);\n\n    // have some padding\n    ctx.translate(padding.left, padding.top);\n\n    const cellWidth = gridScale.bandwidth();\n    const cellHeight = cellWidth * 2;\n    const cellX = 0;\n    const cellY = plotHeight / 2 - cellHeight / 2;\n\n    drawEllipseWithQuatraticCurve(ctx, cellX, cellY, cellWidth, cellHeight, '#D5D5D6', 5);\n\n    const pi2 = Math.PI * 2;\n\n    const radius = 4;\n    const types = [1, 2, 3, 4];\n    types.forEach(type => {\n      ctx.beginPath();\n      ctx.fillStyle = STRAIN_TYPES[type].color;\n      this.static.types[type].forEach(pos => {\n        ctx.moveTo(pos.x + radius, pos.y);\n        ctx.arc(pos.x, pos.y, radius, 0, pi2);\n      });\n\n      ctx.fill();\n    });\n\n    if (this.endModeTicks < 20) {\n      const combisSlice = this.combis.slice(Math.max(this.combis.length - 40, 0));\n      const combisLength = combisSlice.length;\n\n      for (let i = 0; i < combisLength; i++) {\n        const combi = combisSlice[i];\n        combi.forEach(d => {\n          ctx.beginPath();\n          ctx.arc(d.x, d.y, d.r, 0, pi2, false);\n          ctx.fillStyle = d.color;\n          ctx.fill();\n        });\n      }\n    }\n\n    const dataLength = this.data.length;\n\n    for (let i = 0; i < dataLength; i++) {\n      const d = this.data[i];\n\n      ctx.beginPath();\n      ctx.arc(d.x, d.y, d.r, 0, pi2, false);\n      ctx.fillStyle = d.color;\n      ctx.fill();\n    }\n\n    if (END_MODE) {\n      this.endAnimation();\n    }\n  }\n\n  /**\n   *\n   */\n  updateAxes() {\n    const { gridScale, plotHeight } = this.props;\n\n    const labels = ['Start', 'Phase1', 'Phase2', 'Phase3', 'Improvement', 'Combination'];\n\n    const metrics = ['Improvement1', 'Improvement2'];\n\n    // Legend\n    const strainTypes = Object.keys(STRAIN_TYPES);\n    const legendEnter = this.xAxis\n      .selectAll('.key')\n      .data(strainTypes)\n      .enter();\n\n    legendEnter\n      .append('text')\n      .classed('key', true)\n      .text(d => STRAIN_TYPES[d].name)\n      .attr('text-anchor', 'start')\n      .attr('y', (d, i) => plotHeight - (strainTypes.length - (i - 1) * 30))\n      .attr('x', 16);\n\n    legendEnter\n      .append('circle')\n      .attr('fill', d => STRAIN_TYPES[d].color)\n      .attr('r', 4)\n      .attr('cx', 8)\n      .attr('cy', (d, i) => plotHeight - (strainTypes.length - (i - 1) * 30) - 6);\n    // Labels\n\n    const enter = this.xAxis\n      .selectAll('.label')\n      .data(labels)\n      .enter();\n    enter\n      .append('text')\n      .classed('label', true)\n      .text(d => d)\n      .attr('text-anchor', 'start')\n      .attr('y', (d, i) => (i > 4 ? -20 + (plotHeight / 2 - 20) : 30))\n      .attr('x', (d, i) => (i > 4 ? gridScale(i - 1) : gridScale(i)));\n\n    // Counts\n    enter\n      .append('text')\n      .classed('count', true)\n      .text(d => d)\n      .attr('text-anchor', 'end')\n      .attr('y', (d, i) => (i > 4 ? -20 + (plotHeight / 2 - 20) : 30))\n      .attr('x', (d, i) =>\n        i > 4 ? gridScale(i - 1) + gridScale.bandwidth() : gridScale(i) + gridScale.bandwidth(),\n      );\n\n    // Lines\n    enter\n      .append('line')\n      .attr('x1', (d, i) => (i > 4 ? gridScale(i - 1) : gridScale(i)))\n      .attr('x2', (d, i) =>\n        i > 4 ? gridScale(i - 1) + gridScale.bandwidth() : gridScale(i) + gridScale.bandwidth(),\n      )\n      .attr('y1', (d, i) => (i > 4 ? -10 + (plotHeight / 2 - 20) : 40))\n      .attr('y2', (d, i) => (i > 4 ? -10 + (plotHeight / 2 - 20) : 40))\n      .attr('stroke-width', 2)\n      .attr('stroke', '#222');\n\n    // Metric Names\n    const enterMetric = this.xAxis\n      .selectAll('.metric')\n      .data(metrics)\n      .enter();\n    enterMetric\n      .append('text')\n      .classed('metric', true)\n      .text(d => `${d}:`)\n      .attr('text-anchor', 'start')\n      .attr('y', (d, i) => i * 30 + 70)\n      .attr('x', gridScale(4));\n\n    // Metric Values\n    const enterMetricValue = this.xAxis\n      .selectAll('.metric-value')\n      .data(metrics)\n      .enter();\n    enterMetricValue\n      .append('text')\n      .classed('metric metric-value', true)\n      .text(d => `${COUNTS[d].toFixed(2)}%`)\n      .attr('text-anchor', 'end')\n      .attr('y', (d, i) => i * 30 + 70)\n      .attr('x', gridScale(4) + gridScale.bandwidth());\n\n    const that = this;\n    const countKeys = Object.keys(COUNTS);\n    const updateTicker = function() {\n      that.xAxis\n        .selectAll('.count')\n        .text((d, i) => (countKeys.includes(d) ? `${COUNTS[labels[i]]}` : ''));\n      that.xAxis.selectAll('.metric-value').text(d => `${COUNTS[d].toFixed(2)}%`);\n    };\n    d3.timer(updateTicker);\n  }\n\n  /**\n   * Render the chart\n   */\n  render() {\n    const { sizeScale, width, height, padding } = this.props;\n\n    let canvasStyle = {\n      width: width,\n      height: height,\n    };\n\n    return (\n      <div className=\"StrainProcess\" onClick={this.handleClick} style={{ height: height }}>\n        <svg\n          className=\"chart-side\"\n          ref={node => {\n            this.side = node;\n          }}\n          width={padding.left}\n          height={height}\n        />\n        <svg\n          className=\"chart-bottom\"\n          ref={node => {\n            this.bottom = node;\n          }}\n          width={width}\n          height={height}\n        />\n\n        <canvas\n          className=\"chart\"\n          ref={node => {\n            this.canvas = node;\n          }}\n          style={canvasStyle}\n          width={width * sizeScale}\n          height={height * sizeScale}\n        />\n      </div>\n    );\n  }\n}\n\nexport default addComputedProps(chartProps)(StrainProcess);\n","import React, { Component } from 'react';\nimport StrainProcess from './StrainProcess';\n\nclass StrainProcessContainer extends Component {\n  static defaultProps = {};\n\n  constructor(props) {\n    super(props);\n\n    this.state = { data: [] };\n  }\n\n  render() {\n    return (\n      <div>\n        <StrainProcess data={this.state.data} {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default StrainProcessContainer;\n","import React, { Component } from 'react';\n\nimport './App.scss';\n\nimport StrainProcessContainer from '../StrainProcess/StrainProcessContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <StrainProcessContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { RouterToUrlQuery } from 'react-url-query';\n\n// import registerServiceWorker from './registerServiceWorker';\n\nimport './index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// registerServiceWorker();\n"],"sourceRoot":""}